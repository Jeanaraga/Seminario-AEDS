CC = g++
CFLAGS = -Wall -O2 -std=c++11

# Diret√≥rios exatos da sua estrutura
STRUCT_DIRS = FilaDinamica FilaEstatica ListaDinamica ListaEstatica PilhaDinamica PilhaEstatica

# Lista expl√≠cita dos execut√°veis esperados
EXECUTAVEIS = shellsort_FilaDinamica shellsort_FilaEstatica shellsort_ListaDinamica shellsort_ListaEstatica shellsort_PilhaDinamica shellsort_PilhaEstatica

all: $(EXECUTAVEIS)

# Regra gen√©rica para todos os shellsort_*
shellsort_%: %/shellsort_%.cpp
	@echo "üî® Compilando $@ com LIMITE=$(LIMITE)..."
	@if [ -f "$<" ]; then \
		$(CC) $(CFLAGS) -I$* -DLIMITE=$(LIMITE) -DREPETICOES=1 -o $@ $< && echo "‚úÖ $@ compilado com sucesso!"; \
	else \
		echo "‚ùå Arquivo $< n√£o encontrado!"; \
		exit 1; \
	fi


# Regras espec√≠ficas como backup (caso a gen√©rica n√£o funcione)
shellsort_FilaEstatica: FilaEstatica/shellsort_FilaEstatica.cpp
	@echo "üî® Compilando $@..."
	$(CC) $(CFLAGS) -IFilaEstatica -o $@ $<

shellsort_FilaDinamica: FilaDinamica/shellsort_FilaDinamica.cpp
	@echo "üî® Compilando $@..."
	$(CC) $(CFLAGS) -IFilaDinamica -o $@ $<

shellsort_ListaEstatica: ListaEstatica/shellsort_ListaEstatica.cpp
	@echo "üî® Compilando $@..."
	$(CC) $(CFLAGS) -IListaEstatica -o $@ $<

shellsort_ListaDinamica: ListaDinamica/shellsort_ListaDinamica.cpp
	@echo "üî® Compilando $@..."
	$(CC) $(CFLAGS) -IListaDinamica -o $@ $<

shellsort_PilhaEstatica: PilhaEstatica/shellsort_PilhaEstatica.cpp
	@echo "üî® Compilando $@..."
	$(CC) $(CFLAGS) -IPilhaEstatica -o $@ $<

shellsort_PilhaDinamica: PilhaDinamica/shellsort_PilhaDinamica.cpp
	@echo "üî® Compilando $@..."
	$(CC) $(CFLAGS) -IPilhaDinamica -o $@ $<

run: all
	@echo ""
	@echo "üìä Resultados de tempo e mem√≥ria:"
	@for exe in $(EXECUTAVEIS); do \
		if [ -f "./$$exe" ]; then \
			echo ""; \
			echo "üèÉ Executando $$exe..."; \
			/usr/bin/time -v ./$$exe 2> stats_$$exe.txt; \
			if grep "Maximum resident set size" stats_$$exe.txt >/dev/null; then \
				echo "üß† Mem√≥ria M√°xima: $$(grep 'Maximum resident set size' stats_$$exe.txt | awk '{print $$6}') KB"; \
			fi; \
			if grep "Elapsed (wall clock) time" stats_$$exe.txt >/dev/null; then \
				echo "‚è± Tempo Real: $$(grep 'Elapsed (wall clock) time' stats_$$exe.txt | awk '{print $$8}')"; \
			fi; \
		else \
			echo "‚ùå $$exe n√£o foi compilado"; \
		fi; \
	done


clean:
	@echo "üßπ Limpando execut√°veis..."
	@rm -f $(EXECUTAVEIS)
	@echo "‚úÖ Limpeza conclu√≠da!"

# Compilar apenas um espec√≠fico
compile-one:
	@echo "Digite o nome (ex: FilaEstatica):"
	@read nome; \
	if [ -f "$$nome/shellsort_$$nome.cpp" ]; then \
		echo "üî® Compilando shellsort_$$nome..."; \
		$(CC) $(CFLAGS) -I$$nome -o shellsort_$$nome $$nome/shellsort_$$nome.cpp && \
		echo "‚úÖ Compilado com sucesso!" || echo "‚ùå Erro na compila√ß√£o"; \
	else \
		echo "‚ùå Arquivo $$nome/shellsort_$$nome.cpp n√£o encontrado"; \
	fi

test-all:
	@echo "üß™ Testando compila√ß√£o individual:"
	@for dir in $(STRUCT_DIRS); do \
		echo ""; \
		echo "üìÅ Testando $$dir..."; \
		if [ -f "$$dir/shellsort_$$dir.cpp" ]; then \
			$(CC) $(CFLAGS) -I$$dir -o test_$$dir $$dir/shellsort_$$dir.cpp 2>&1 && \
			echo "‚úÖ $$dir: OK" || echo "‚ùå $$dir: ERRO"; \
			rm -f test_$$dir; \
		else \
			echo "‚ùå $$dir: Arquivo n√£o encontrado"; \
		fi; \
	done

debug:
	@echo "üîç Informa√ß√µes de Debug:"
	@echo "EXECUTAVEIS: $(EXECUTAVEIS)"
	@echo ""
	@for dir in $(STRUCT_DIRS); do \
		echo "üìÅ $$dir:"; \
		if [ -f "$$dir/shellsort_$$dir.cpp" ]; then \
			echo "  ‚úÖ shellsort_$$dir.cpp"; \
		else \
			echo "  ‚ùå shellsort_$$dir.cpp n√£o encontrado"; \
		fi; \
		if [ -f "$$dir/shellsort_$$dir.hpp" ]; then \
			echo "  ‚úÖ shellsort_$$dir.hpp"; \
		else \
			echo "  ‚ùå shellsort_$$dir.hpp n√£o encontrado"; \
		fi; \
	done




.PHONY: all run clean compile-one test-all debug
